name: Aspect Workflows CI (Node.js GCP Example)

on:
  push:
    branches:
      - main
  pull_request: # Incluir Pull Requests é prática recomendada para CI
  workflow_dispatch:

jobs:
  # Job 1: Configuração do Pipeline (usa runner "small")
  setup:
    name: Setup Aspect Workflows
    # O label do runner é 'aspect-small', conforme definido no seu workflows.tf
    runs-on: [self-hosted, aspect-workflows, aspect-small]
    
    env:
      ASPECT_WORKFLOWS_BIN_DIR: /etc/aspect/workflows/bin

    steps:
      - name: Workflows Environment Setup
        run: ${ASPECT_WORKFLOWS_BIN_DIR}/configure_workflows_env
        
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
          
      - name: Generate Pipeline Steps (Rosetta)
        # Este comando traduz o .aspect/workflows/config.yaml para passos de pipeline
        uses: aspect-build/workflows-action@v5 # Recomenda-se usar a versão mais recente
        with:
          task: rosetta-steps 

  # Job 2: Execução das Tarefas Bazel (usa runner "default")
  run_tasks:
    name: Build and Test
    needs: [setup]
    # O label do runner é 'aspect-default', conforme definido no seu workflows.tf
    runs-on: [self-hosted, aspect-workflows, aspect-default]
    
    env:
      ASPECT_WORKFLOWS_BIN_DIR: /etc/aspect/workflows/bin

    steps:
      - name: Workflows Environment Setup
        # Precisa ser re-executado no novo runner
        run: ${ASPECT_WORKFLOWS_BIN_DIR}/configure_workflows_env
        
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Agent Health Check
        run: ${ASPECT_WORKFLOWS_BIN_DIR}/agent_health_check

      - name: Run Bazel Tasks (Build & Test)
        # Executa as tarefas 'build' e 'test' conforme definido no seu .aspect/workflows/config.yaml
        uses: aspect-build/workflows-action@v5 
        with:
          task: ci 
          workspace: "node_app_gcp"